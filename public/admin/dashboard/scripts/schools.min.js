let globalData={countries:[],schools:[],degrees:[],programs:[]};function fetchAllData(){fetch("../../../api/school/allSchools.php").then((response=>response.json())).then((data=>{data.success&&(globalData=data,renderAllLists(),populateDropdowns())})).catch((error=>{console.error("Error fetching data:",error),Swal.fire({icon:"error",title:"Oops...",text:"Something went wrong while fetching data!"})}))}function renderCountryList(){document.getElementById("countryList").innerHTML=globalData.countries.map((country=>`\n    <li class="py-4 flex justify-between items-center">\n      <span id="country-${country.id}">${country.name}</span>\n      <div class="space-x-2">\n        <button onclick="editCountry(${country.id})" class="text-blue-600 hover:text-blue-800">\n          <i class="fas fa-edit"></i>\n        </button>\n        <button onclick="deleteCountry(${country.id})" class="text-red-600 hover:text-red-800">\n          <i class="fas fa-trash"></i>\n        </button>\n      </div>\n    </li>\n  `)).join("")}function renderSchoolList(){document.getElementById("schoolList").innerHTML=globalData.schools.map((school=>{const country=globalData.countries.find((c=>c.id===school.country_id));return`\n      <li class="py-4 flex justify-between items-center">\n        <div>\n          <span id="school-${school.id}">${school.name}</span>\n          <span class="text-sm text-gray-500"> - ${school.city}, ${country?.name||"Unknown"}</span>\n          <span class="block text-sm text-green-600 mt-1">Application Cost: $${parseFloat(school.applicationCost).toFixed(2)}</span>\n        </div>\n        <div class="space-x-2">\n          <button onclick="editSchool(${school.id})" class="text-blue-600 hover:text-blue-800">\n            <i class="fas fa-edit"></i>\n          </button>\n          <button onclick="deleteSchool(${school.id})" class="text-red-600 hover:text-red-800">\n            <i class="fas fa-trash"></i>\n          </button>\n        </div>\n      </li>\n    `})).join("")}function renderProgramList(){document.getElementById("programList").innerHTML=globalData.programs.map((program=>{const school=globalData.schools.find((s=>s.id===program.school_id)),degree=globalData.degrees.find((d=>d.id===program.degree));return`\n            <li class="py-4 flex justify-between items-center">\n                <div>\n                    <span id="program-${program.id}">\n                        ${degree?.name||"Unknown Degree"} . ${program.name}\n                    </span>\n                    <span class="text-sm text-gray-500">\n                        - ${school?.name||"Unknown School"}\n                    </span>\n                </div>\n                <div class="space-x-2">\n                    <button onclick="editProgram(${program.id})" class="text-blue-600 hover:text-blue-800">\n                        <i class="fas fa-edit"></i>\n                    </button>\n                    <button onclick="deleteProgram(${program.id})" class="text-red-600 hover:text-red-800">\n                        <i class="fas fa-trash"></i>\n                    </button>\n                </div>\n            </li>\n        `})).join("")}function renderAllLists(){renderCountryList(),renderSchoolList(),renderProgramList()}function populateDropdowns(){try{document.getElementById("selectCountry").innerHTML='<option value="">Select Country</option>'+globalData.countries.map((country=>`<option value="${country.id}">${country.name}</option>`)).join("");document.getElementById("selectSchool").innerHTML='<option value="">Select School</option>'+globalData.schools.map((school=>`<option value="${school.id}">${school.name}</option>`)).join("");document.getElementById("degreeType").innerHTML='<option value="">Select Degree Type</option>'+globalData.degrees.map((degree=>`<option value="${degree.id}">${degree.name}</option>`)).join(""),console.log("Dropdowns populated successfully.")}catch(error){console.error("Error populating dropdowns:",error),Swal.fire({icon:"error",title:"Oops...",text:"Failed to populate dropdowns!"})}}function addCountry(){const nameInput=document.getElementById("countryName"),name=nameInput.value.trim();name&&fetch("../../../api/country/addCountry.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:name})}).then((response=>response.json())).then((data=>{data.success?(Swal.fire({icon:"success",title:"Success!",text:data.message}),fetchAllData(),nameInput.value=""):Swal.fire({icon:"error",title:"Error!",text:data.message})})).catch((error=>console.error("Error adding country:",error)))}function addSchool(){const nameInput=document.getElementById("schoolName"),cityInput=document.getElementById("schoolCity"),applicationCostInput=document.getElementById("applicationCost"),countrySelect=document.getElementById("selectCountry"),name=nameInput.value.trim(),city=cityInput.value.trim(),applicationCost=parseFloat(applicationCostInput.value),country_id=countrySelect.value;name&&city&&""!==applicationCost&&country_id?fetch("../../../api/school/addSchool.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:name,city:city,applicationCost:applicationCost,country_id:country_id})}).then((response=>response.json())).then((data=>{data.success?(Swal.fire({icon:"success",title:"Success!",text:data.message}),fetchAllData(),nameInput.value="",cityInput.value="",applicationCostInput.value="",countrySelect.value=""):Swal.fire({icon:"error",title:"Error!",text:data.message})})).catch((error=>{console.error("Error adding school:",error),Swal.fire({icon:"error",title:"Error!",text:"Failed to add school. Please try again."})})):Swal.fire({icon:"error",title:"Error!",text:"Please fill in all fields"})}function addProgram(){const nameInput=document.getElementById("programName"),degree=document.getElementById("degreeType"),schoolSelect=document.getElementById("selectSchool"),name=nameInput.value.trim(),degreeType=degree.value,school_id=schoolSelect.value;name&&degreeType&&school_id?fetch("../../../api/program/addProgram.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:name,degreeType:degreeType,school_id:school_id})}).then((response=>response.json())).then((data=>{data.success?(Swal.fire({icon:"success",title:"Success!",text:data.message}),fetchAllData(),nameInput.value="",degree.value="",schoolSelect.value=""):Swal.fire({icon:"error",title:"Error!",text:data.message})})).catch((error=>{console.error("Error adding program:",error),Swal.fire({icon:"error",title:"Error!",text:"Failed to add program. Please try again."})})):Swal.fire({icon:"error",title:"Error!",text:"Please fill in all fields"})}function editCountry(id){const country=globalData.countries.find((c=>c.id===id));Swal.fire({title:"Edit Country",input:"text",inputValue:country.name,inputLabel:"Country Name",showCancelButton:!0,confirmButtonText:"Update",cancelButtonText:"Cancel",inputValidator:value=>value&&""!==value.trim()?value===country.name?"Please enter a different name!":void 0:"Country name cannot be empty!"}).then((result=>{result.isConfirmed&&fetch("../../../api/country/updateCountry.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:id,name:result.value})}).then((response=>response.json())).then((data=>{data.success?(Swal.fire({icon:"success",title:"Success!",text:data.message}),fetchAllData()):Swal.fire({icon:"error",title:"Error!",text:data.message})})).catch((error=>{console.error("Error updating country:",error),Swal.fire({icon:"error",title:"Error!",text:"Failed to update country. Please try again."})}))}))}function editSchool(id){const school=globalData.schools.find((s=>s.id===id));Swal.fire({title:"Edit School",html:`\n            <input id="swal-school-name" class="swal2-input" placeholder="School Name" value="${school.name}">\n            <input id="swal-school-city" class="swal2-input" placeholder="City" value="${school.city}">\n            <input id="swal-application-cost" type="number" class="swal2-input" placeholder="Application Cost" value="${school.applicationCost}">\n        `,showCancelButton:!0,confirmButtonText:"Update",cancelButtonText:"Cancel",preConfirm:()=>{const newName=document.getElementById("swal-school-name").value,newCity=document.getElementById("swal-school-city").value,newCost=document.getElementById("swal-application-cost").value;return newName&&newCity&&""!==newCost?newName===school.name&&newCity===school.city&&parseFloat(newCost)===parseFloat(school.applicationCost)?(Swal.showValidationMessage("Please make changes before updating"),!1):{newName:newName,newCity:newCity,newCost:newCost}:(Swal.showValidationMessage("Please fill in all fields"),!1)}}).then((result=>{result.isConfirmed&&fetch("../../../api/school/updateSchool.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:id,name:result.value.newName,city:result.value.newCity,applicationCost:parseFloat(result.value.newCost)})}).then((response=>response.json())).then((data=>{data.success?(Swal.fire({icon:"success",title:"Success!",text:data.message}),fetchAllData()):Swal.fire({icon:"error",title:"Error!",text:data.message})})).catch((error=>{console.error("Error updating school:",error),Swal.fire({icon:"error",title:"Error!",text:"Failed to update school. Please try again."})}))}))}function editProgram(id){const program=globalData.programs.find((p=>p.id===id)),degrees=globalData.degrees;Swal.fire({title:"Edit Program",html:`\n            <input id="swal-program-name" class="swal2-input" placeholder="Program Name" value="${program.name}">\n            <select id="swal-program-degree" class="swal2-input" style="border: 1px solid #d9d9d9;">\n                ${degrees.map((degree=>`\n                    <option value="${degree.id}" ${program.degree===degree.id?"selected":""}>${degree.name}</option>\n                `)).join("")}\n            </select>\n        `,showCancelButton:!0,confirmButtonText:"Update",cancelButtonText:"Cancel",preConfirm:()=>{const newName=document.getElementById("swal-program-name").value,newDegree=document.getElementById("swal-program-degree").value;return newName?newName===program.name&&parseInt(newDegree)===program.degree?(Swal.showValidationMessage("Please make changes before updating"),!1):{newName:newName,newDegree:newDegree}:(Swal.showValidationMessage("Please fill in all fields"),!1)}}).then((result=>{result.isConfirmed&&fetch("../../../api/program/updateProgram.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:id,name:result.value.newName,degreeType:parseInt(result.value.newDegree)})}).then((response=>response.json())).then((data=>{data.success?(Swal.fire({icon:"success",title:"Success!",text:data.message}),fetchAllData()):Swal.fire({icon:"error",title:"Error!",text:data.message})})).catch((error=>{console.error("Error updating program:",error),Swal.fire({icon:"error",title:"Error!",text:"Failed to update program. Please try again."})}))}))}function deleteCountry(id){Swal.fire({title:"Are you sure?",text:"You won't be able to revert this!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete it!"}).then((result=>{result.isConfirmed&&fetch("../../../api/country/deleteCountry.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:id})}).then((response=>response.json())).then((data=>{data.success?(Swal.fire("Deleted!",data.message,"success"),fetchAllData()):Swal.fire("Error!",data.message,"error")})).catch((error=>{console.error("Error deleting country:",error),Swal.fire("Error!","Failed to delete country. Please try again.","error")}))}))}function deleteSchool(id){Swal.fire({title:"Are you sure?",text:"You won't be able to revert this!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete it!"}).then((result=>{result.isConfirmed&&fetch("../../../api/school/deleteSchool.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:id})}).then((response=>response.json())).then((data=>{data.success?(Swal.fire("Deleted!",data.message,"success"),fetchAllData()):Swal.fire("Error!",data.message,"error")})).catch((error=>{console.error("Error deleting school:",error),Swal.fire("Error!","Failed to delete school. Please try again.","error")}))}))}function deleteProgram(id){Swal.fire({title:"Are you sure?",text:"You won't be able to revert this!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete it!"}).then((result=>{result.isConfirmed&&fetch("../../../api/program/deleteProgram.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:id})}).then((response=>response.json())).then((data=>{data.success?(Swal.fire("Deleted!",data.message,"success"),fetchAllData()):Swal.fire("Error!",data.message,"error")})).catch((error=>{console.error("Error deleting program:",error),Swal.fire("Error!","Failed to delete program. Please try again.","error")}))}))}function initializeSchoolsPage(){Swal.mixin({toast:!0,position:"top-end",showConfirmButton:!1,didOpen:toast=>{toast.addEventListener("mouseenter",Swal.stopTimer),toast.addEventListener("mouseleave",Swal.resumeTimer)}}).fire({title:"Loading your Schools and Programs...",timer:2e3,timerProgressBar:!0}),fetchAllData()}